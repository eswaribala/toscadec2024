spring.application.name=patientapi

server.port=7072

#data source
spring.datasource.url=jdbc:mysql://localhost:3306/accpatientdb?useSSL=true
spring.datasource.username=root
spring.datasource.password=vignesh
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#data source connection pool
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=12
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

## JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=default
spring.jpa.show-sql=true
# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.continue-on-error=false
spring.datasource.generate-unique-name=false
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jackson.serialization.fail-on-empty-beans=false
graphql.tools.schema-location-pattern= **/*.graphqls
#actuator
#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=always
##actuator and prometheus
#management.endpoint.metrics.enabled=true
##management.endpoints.web.exposure.include=*
#management.endpoint.prometheus.enabled=true
#management.prometheus.metrics.export.enabled=true
#spring.sleuth.otel.config.trace-id-ratio-based=1.0
#spring.sleuth.otel.exporter.otlp.endpoint=http://host.docker.internal:4318

#
## All traces should be sent to latency analysis tool
#management.tracing.sampling.probability=1.0
#tracing.url=http://otel-collector:4317
#
## For Exemplars to work we need histogram buckets
#management.metrics.distribution.percentiles-histogram.http.server.requests=true
#
#logging.pattern.console =%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr([${spring.application.name},%X{traceId},%X{spanId}]) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m %n%wEx
#
#logging.level.web=DEBUG
#logging.level.io.opentelemetry=DEBUG
#logging.level.root=INFO
#logging.level.io.jaegertracing=DEBUG
## OpenTelemetry Configuration
#otel.exporter.jaeger.endpoint=http://jaeger:14250  # Service name for Jaeger collector in Kubernetes
#otel.exporter.jaeger.protocol=grpc                                    # Use grpc protocol
#otel.sdk.disabled=false                                               # Enable the OpenTelemetry SDK
#otel.traces.sampler=always_on
#otel.resource.attributes=service.name=patientapi
#
##spring.sleuth.otel.exporter.otlp.endpoint= http://otel-collector:4317
#opentracing.jaeger.grpc-sender.host=jaeger
#opentracing.jaeger.grpc-sender.port=14250
#opentracing.jaeger.udp-sender.host=jaeger
#opentracing.jaeger.udp-sender.port=6831
#opentracing.jaeger.const-sampler.decision=true
#opentracing.jaeger.enabled=true
#opentracing.jaeger.service-name=patientapi
#JAEGER_ENDPOINT=http://jaeger-collector:14268/api/traces
#JAEGER_SENDER_FACTORY=io.jaegertracing.thrift.internal.senders.HttpSender
#spring.sleuth.otel.exporter.otlp.endpoint=http://jaeger:14250
## Jaeger Configuration for Kubernetes
#jaeger.endpoint=http://jaeger:14268/api/traces      # HTTP endpoint for Jaeger collector in Kubernetes
#jaeger.sender.endpoint=http://jaeger:14268/api/traces
#jaeger.logging=true                                                   # Enable logging for tracing details
#jaeger.service-name=my-patientapi
#
#
## Enable Auto-Instrumentation for HTTP (Optional)
#otel.instrumentation.http.server.enabled=true
#otel.instrumentation.spring.enabled=true
#
#
#JAEGER_SAMPLER_TYPE=probabilistic
#JAEGER_SAMPLER_PARAM=1
#JAEGER_SAMPLER_MANAGER_HOST_PORT=jaeger:5778
#JAEGER_REPORTER_LOG_SPANS=true
#JAEGER_AGENT_HOST=host.docker.internal
#JAEGER_AGENT_PORT=6831
#JAEGER_REPORTER_FLUSH_INTERVAL=1000
#JAEGER_REPORTER_MAX_QUEUE_SIZE=100
#application-server-id=server-x